==============================================================================================
Project Sidewinder
Development Blog
==============================================================================================


TO DO List (Pending)
------------------
[] Establish Scene Manager (currently using individual C# files to handle each scene transition, should be a better way)
[] Implement other enemy spawn types

[] Add Debug Menu?
[] Implement touchscreen input method?

[] Fix Attack Drone functions
	[] Spawn based on power up status
	[] Formation system: Follow
	[] Action when player dies (throws itself in front, move to scrolling screen, etc.)
	[] Player can pick them back up after respawning


---------------------------------------------------------------


2019/11/25 (Mon)
- Laser physics now using Raycasting. Fixes all known issues using Triggers only
	- Raycast relies on collider property instead of sprite length
	- Method to implement directional attack mode?
- Increased shot impact pool (15 -> 20)
- Converted power up booleans to tier-based (uses integers, 0 = nothing/disabled)
- Stage slightly modified to test upcoming missile system
- Updated power up gauge to include limits
	- Text presentation to be implemented
	
[] Implement floor-running missile type
[] Implement touchscreen input method?

	
2019/11/24 (Sun)
- Put all attack collections into prefab for easy extensibility
- Added RigidBody and locked XYZ on stage objects to allow laser to be stopped when firing
	- Alternative: Apply RigidBody to laser instead?
- Fixed laser algorithm for stopping when hitting enemy object
	- Still need to fix collision detection approach
	- Attack does not continue going forward when enemy destroyed using attack (when collider vanishes)
	- POSSIBLE SOLUTION: Use Raycasting techniques
		- Raycasting method successful
- Tightend code to remove unused variables
- Particle system added to laser attack
	- May need visual tweaks later

	
2019/11/23 (Sat)
- Fixed enemy HP bug (HP == 0 changed to HP <= 0) as failsafe against multiple damage sources
- Attack drone (Options) implemented with new Blender model
	- Basic shot added
	- Laser shot added
	- Not implemented yet: 
		- Attack Drone spawn based on power up status
		- Formation systems (start with basic follow pattern)
		- Needs an action when player dies, and method for player to pick them back up
		- 
- Adjusted light intensity of player attack (5 to 1)
- Laser effect bug during player death while firing fixed
- Missile model created 
	- Need to develop physics behind it


2019/11/22 (Fri)
- Time off (spent experimenting with Blender)


2019/11/21 (Thu)
- Upgraded to Unity 2019.2.13f1 (latest build at time)
- Laser attack added
	- Does not stop when hitting solid objects like walls or enemies with high HP
	- Need to apply impact effect properly
	- Big issue: Does not detect impact with walls for some reason. Need to research collider issue about this.

2019/11/20 (Wed)
- Added enemy flash effect when taking damage
- Fixed enemy collider handler (needs both Enter and Stay to handle different attack types)
- Re-enabled normal attacks in the meantime when testing other parts of game


2019/11/19 (Tue)
- Using "limited bullets" to incentivize close-up risky play via increased effective DPS (like old shmups)
	- Player attack pool reduced from 15 to 5.
	- Player bullet speed reduced by 10%.
	- Player rate of fire doubled.

- Foundation established for laser prototype.
	- Enemy hit registration has been changed to OnTriggerStay instead of OnTriggerEnter
	

2019/11/18 (Mon)
- Death explosion fixed.
- Test stage environment colliders and tags fixed.
- Minor changes to 3D Models
	- Likely have to work on new ones when designs finalized anyway.
	- May as well get in some practice.


2019/11/17 (Sun)
- Now using Perspective View for all objects, with 2D enemies and effects rendered using separate camera.
	- Need to reorganize and only keep necessary cameras and depths of each object and effect.
- Player attack pool extended from 10 to 15.
- 3D stage implements using colliders per object instead of mesh collider. Can consider method of building stages using individual objects.
	- Mesh collider too resource-heavy, and problems with detecting objects inside.
- Vic Viper model recolored slightly with black highlights in various parts like vents.
- Player death & respawn implemented (with invincibility period of 3 seconds)
	- Not tied to lives system yet.
	- Need to fix particle animation for player death


2019/11/16 (Sat)
- Attempt at creating 3D perspective layout for stage, but lack of clipping between objects and stage.
	- Looking up method to render stage as perspective while keeping all objects orthographic.


2019/11/15 (Fri)
- Backup/Versioning created on GitHub for project.


2019/11/14 (Thu)
- Migration to full use of Text Mesh Pro for game UI and Canvas completed


2019/11/11 (Mon)
Fixed mock countdown's arcade pattern mesh renderer on Canvas.
	- Need to confirm how mesh renderers behave in canvas.
	

2019/11/10 (Sun)
- Experiment with creating particle system for use with weapons
	- Combination of 2D sprites and 3D effects
	- Cannot use detatch and destroy method due to reusage of bullets
		- Resolved by creating separate pool for bullet effects
			- Extended asset pool function by including effects object association
				- Will be very useful when adding more attacks and enemy effects
- Minor tweaks to effects animations
- Font "Pixel7" added
	- Not perfect monospace font. Need to find another.
- Text Mesh Pro imported to project
	- Migrating text objects to Text Mesh Pro
	- Worth doing to maximize scalability
	- Need to apply Canvas-based approach
		- Setting Screen Space = Camera resolves all prior problems. Holy shit.
- Switched to Canvas for text and other elements
	- Currently only applied to Bootup scene so far. Need to migrate these in CGP.


2019/11/09 (Sat)
- Improved asset pool code to self-populate
	- Replaces previous approach of adding manual population of objects (now can add more instances without needing to reapply each step)
	- Much more convenient as this needs to be applied to other potential asset pools such as enemies, effects, other bullets, etc.
- Added more asteroids to testing area
- Improved thruster effects implementation
	- Minimized lighting rendering by disabling unused objects in scenes
- Speed Up power up effect added
	- Including ring glow FX around player when used (to be applied for all power up usage)
- Bug fixed with asteroid movement randomizer (movement along Z axis disabled)	
- Scoring implemented
- Mock arcade bootup menu added
	- Learnt how to create patterns using this
		- Might have some way to add mock scanlines as an option

		
2019/11/08 (Fri)
- Bullet impact effect created
	- Created asset pool for each bullet impact (separate as not always called such as when bullet leaves screen)
	- Asset pool population very tedious especially when needing to add features as development goes on. Need a more automated approach if possible.

	
2019/11/07 (Thu)
- Thruster effects added
	- Uses 2D sprites

	
2019/11/06 (Wed)
- Title Screen mockup created


2019/11/05 (Tue)
- Player tilt animation issue (using D-Pad) fixed using math-based approach
	- Animator method considered, but want to minimize clutter to animation hierarchy for later
	- Confirmed also works when using analog stick (e.g. DualShock gamepad)

	
2019/11/04 (Mon)
- Power meter responses added upon powerup pick up
- Power ups added
- Asteroid prefab added
- Asset pool implementation for shot firing successful
- 


2019/11/03 (Sun)
- Revision of shmup tutorial & assets retrieved
	- Also using previous Prot_Sidewinder and PARO projects for code and implementation reference
		- Prot_Sidewinder not playable anymore due to deprecated control scheme from asset store
- Basic controls implemented
	- Tilt issue from Prototype still present when using D-Pad inputs. Needs a solution to it for smooth implementation.
- Score & Layout UI added
- Power Meter UI added


2019/11/02 (Sat)
- Basic foundation groundwork established for game
- Mock-ups for features written on paper
- Basic layout, empty scenes created